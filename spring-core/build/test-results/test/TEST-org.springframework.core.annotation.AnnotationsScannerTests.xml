<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.core.annotation.AnnotationsScannerTests" tests="60" skipped="0" failures="0" errors="0" timestamp="2020-12-16T17:34:25" hostname="DESKTOP-EMRC5FU" time="0.021">
  <properties/>
  <testcase name="directStrategyOnMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="inheritedAnnotationsStrategyOnClassWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="inheritedAnnotationsStrategyOnClassScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodWithIgnorablesScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="directStrategyOnMethodWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodWithMultipleCandidatesScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="inheritedAnnotationsMethodOnMethodWhenHasSuperclassIgnoresInherited" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnMethodHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="exhaustiveStrategyOnClassWhenHasSuperclassScansSuperclass" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="inheritedAnnotationsStrategyOnMethodWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnMethodHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnBridgedMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="superclassStrategyOnMethodHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="scanWhenProcessorReturnsFromDoWithAnnotationsExitsEarly" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="directStrategyOnClassWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnClassScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="scanWhenProcessorReturnsFromDoWithAggregateExitsEarly" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnClassWhenHasInterfaceScansOnlyDirect" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="directStrategyOnBridgeMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnClassWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="inheritedAnnotationsStrategyOnMethodWhenHasInterfaceDoesNotIncludeInterfaces" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnMethodWhenHasInterfaceScansOnlyDirect" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnMethodWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnClassWhenHasSuperclassScansOnlyDirect" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnClassHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodWhenHasSuperclassScansSuperclass" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnMethodWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="exhaustiveStrategyOnClassScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnMethodWhenHasInterfaceDoesNotIncludeInterfaces" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnClassHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnClassWhenHasAnnotationOnBothClassesIncudesOnlyOne" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="exhaustiveStrategyOnMethodWhenHasInterfaceDoesNotIncludeInterfaces" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnClassWhenHasInterfaceDoesNotIncludeInterfaces" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnClassWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="exhaustiveStrategyOnMethodWithGenericParameterNonOverrideScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnClassWhenHasSuperclassScansOnlyInherited" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnClassScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnClassHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnClassWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnMethodWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnClassWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnClassWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="dirextStrategyOnBridgedMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="directStrategyOnMethodWhenHasSuperclassScansOnlyDirect" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodWithGenericParameterOverrideScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnClassHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.002"/>
  <testcase name="superclassStrategyOnClassWhenHasInterfaceDoesNotIncludeInterfaces" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnMethodWhenHasSuperclassScansSuperclass" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="scanWhenProcessorHasFinishMethodUsesFinishResult" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="superclassStrategyOnClassWhenHasSuperclassScansSuperclass" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="inheritedAnnotationsStrategyOnClassWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnBridgeMethodScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="superclassStrategyOnMethodWhenMultipleAnnotationsScansAnnotations" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodHierarchyScansInCorrectOrder" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.001"/>
  <testcase name="exhaustiveStrategyOnClassWhenHasInterfaceDoesNotIncludeInterfaces" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <testcase name="exhaustiveStrategyOnMethodWhenNotAnnoatedScansNone" classname="org.springframework.core.annotation.AnnotationsScannerTests" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
